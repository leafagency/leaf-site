extends ../../layouts/case-study.pug

block prepend vars
  -var pageTitle = "There are no excuses for poor engineering in 2017 - Leaf"
  -var metaUrl = "https://weareleaf.com/blog/there-are-no-excuses-for-poor-engineering-in-2017"
  -var metaTitle = "There are no excuses for poor engineering in 2017"
  -var metaDescription = "Poor engineering is false economy. Quick product iteration cycles are largely facilitated by software, great data, and great automation, and all of these come about with great engineering."

block pageComponents
  +banner({
    bannerCompany: "There are no excuses for poor engineering in 2017",
    bannerModifer: "photo",
    bannerImage: {
      src: "/assets/images/blog/machine-room.jpg",
      fallbackSrc: "/assets/images/blog/machine-room.jpg",
      alt: "Coloured chalk",
    },
  })

  .section.section--margin
    .container
      +share-icons({
        socialModifier: "inline"
      })

  .section
    .container

      .grid.grid--blog
        .grid__item.grid__item--span-2
          .blog-post
            h1 There are no excuses for poor engineering in 2017

            p.intro-paragraph Writing great code is easier than ever, and yet we act like it doesn’t matter

            p In startup circles, you’ll often hear entrepreneurs boldly claim their customers don’t care about code. Language choices, algorithms and technical debt make no difference to them — all care about is the quality of the product they interact with.

            p They’re not wrong, after all — Your customers do just want a great product. How that project works is rarely much of a concern to them, in most cases it might as well just be magic. However, what’s strange is how often these same entrepreneurs next logical leap is that product-first thinking should mean their engineering doesn’t matter.

            p <i>“We’ll rewrite the MVP when we’ve achieved product market fit”</i>, they’ll say. <i>“We’ll refactor this when we get a spare moment”</i>, they’ll promise. Spoiler: It won’t happen, not for a long while and not without a lot of pain. We know this to be true in most cases, and yet naively optimistic founders will run headlong into this tripwire time and time again for the sake of fast product iteration.

            p This “screw the codebase” approach may have worked 10 years ago, but in 2017 it’s false economy. Quick product iteration cycles are largely facilitated by <strong>great software</strong>, <strong>great data</strong>, and <strong>great automation</strong>, and all of these come about with great engineering. The key difference now is that the development and product tooling available today makes it cost <i>effective</i> to get on board with good code quality.

            p Think about it — Modern CI services make automated pull request blocking, test-running and production deployments a breeze. Features like automatic review apps mean you can have per pull-request deployments of your application in a matter of minutes. Code linting, automated dependency updating and even limited automated code reviews are all pretty mainstream and take a few minutes to set up. Virtual device labs can be spun up in seconds that allow you to run tests against many devices in parallel. Scaleable metrics, error tracking and logging are all off the shelf products now too.

            p A lot of the above are even one-off automations that can be reused infinitely for a small cost. Combine these with a <strong>pragmatic product-focussed</strong> approach to maintaining software quality and you’ll be paid back with interest. This payback will come through <strong>lower development spend</strong>, due to the codebase being easier to work with for your engineers; through <strong>lower support spend</strong>, due to you shipping higher quality, bug-free product; and through <strong>lower marketing spend</strong>, as your happy customers evangelise your product on your behalf, not to mention a huge <strong>boost to developer happiness</strong>. Treat your codebase like crap, however, and you can expect these trends to reverse.

            p I’m not saying we should demand perfection, it’s just that achieving great engineering is easier, and more cost-effective than people seem to think. Give some modern development tooling a try today and encourage your team to improve the codebase with each change they make — you won’t regret it.

          +author-bio-large({
            class: "author-bio-large--margin-top",
            author: {
              authorName: "Chris Annetts",
              authorDetails: "Director · Leaf",
              authorThumbnail: {
                src: "/assets/images/mike_blog.png",
                fallbackSrc: "/assets/images/mike_blog.png",
                alt: "Mike"
              }
            },
            twitterUrl: "https://twitter.com/we_are_leaf",
            twitterImage: {
              src: "/assets/images/twitter.svg",
              fallbackSrc: "https://img.icons8.com/metro/420/twitter.png",
              alt: "Find Mike on Twitter",
            },
            linkedinUrl: "https://www.linkedin.com/company/weareleaf/",
            linkedinImage: {
              src: "assets/images/linkedin.svg",
              fallbackSrc: "https://image.flaticon.com/icons/png/512/34/34227.png",
              alt: "Find Mike on LinkedIn",
            },
            authorParagraph: "I'm a Software Engineer & Director at Leaf, and like the web, dogs, food & travel.",
            authorLinkUrl: "https://weareleaf.com/company",
          })

        .grid__item
          +author-bio-small({
            author: {
              authorName: "Mike Carter",
              authorDetails: "Director · Leaf",
              authorThumbnail: {
                src: "/assets/images/mike_blog.png",
                fallbackSrc: "/assets/images/mike_blog.png",
                alt: "Mike"
              }
            },
            twitterUrl: "https://twitter.com/we_are_leaf",
            twitterImage: {
              src: "/assets/images/twitter.svg",
              fallbackSrc: "https://img.icons8.com/metro/420/twitter.png",
              alt: "Find Mike on Twitter",
            },
            linkedinUrl: "https://www.linkedin.com/company/weareleaf/",
            linkedinImage: {
              src: "assets/images/linkedin.svg",
              fallbackSrc: "https://image.flaticon.com/icons/png/512/34/34227.png",
              alt: "Find Mike on LinkedIn",
            },
            authorParagraph: "I'm a Software Engineer & Director at Leaf, and like the web, dogs, food & travel.",
            authorLinkUrl: "https://weareleaf.com/company",
          })

    .section
      .container

        hr.divider.divider--margin-blog

        .grid.grid--blog
          .grid__item
            +post({
              author: {
                class: "author--margin-top",
                authorDetails: "2 Aug 2018 · 3 min read",
                authorName: "Mike Carter",
                authorThumbnail: {
                  src: "/assets/images/mike_blog.png",
                  fallbackSrc: "/assets/images/mike_blog.png",
                  alt: "Mike"
                }
              },
              postUrl: "https://medium.com/leaf-software/a-home-office-for-productivity-d23f0aee627b",
              postImage: {
                src: "/assets/images/home-office.png",
                fallbackSrc: "/assets/images/home-office.png",
                alt: "A home office for productivity",
              },
              postHeading: "A home office for productivity",
              postText: "At Leaf, we embrace remote work to get a productive edge. However, it’s easy for a remote environment to work against you."
            })

          .grid__item
            +post({
              author: {
                class: "author--margin-top",
                authorDetails: "21 May 2018 · 3 min read",
                authorName: "Mike Carter",
                authorThumbnail: {
                  src: "/assets/images/mike_blog.png",
                  fallbackSrc: "/assets/images/mike_blog.png",
                  alt: "Mike"
                }
              },
              postUrl: "https://medium.com/leaf-software/behavioural-traps-in-software-teams-e27806f35884",
              postImage: {
                src: "/assets/images/behavioural-traps.png",
                fallbackSrc: "/assets/images/behavioural-traps.png",
                alt: "Behavioural traps in software teams",
              },
              postHeading: "Behavioural traps in software teams",
              postText: "In my experience of software teams, there are a few behavioural traps that leaders (senior stakeholders …"
            })

          .grid__item
            +post({
              author: {
                class: "author--margin-top",
                authorDetails: "20 Nov 2017 · 4 min read",
                authorName: "Mike Carter",
                authorThumbnail: {
                  src: "/assets/images/mike_blog.png",
                  fallbackSrc: "/assets/images/mike_blog.png",
                  alt: "Mike"
                }
              },
              postUrl: "https://medium.com/leaf-software/working-too-much-please-stop-8dc0ac3ec179",
              postImage: {
                src: "/assets/images/work-too-much.png",
                fallbackSrc: "/assets/images/work-too-much.png",
                alt: "Working too much? Please stop",
              },
              postHeading: "Working too much? Please stop",
              postText: "These days, people in most organisations are encouraged to work in their personal time …"
            })
